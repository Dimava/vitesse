{
    "props": {
        "scope": "typescript",
        "prefix": "props",
        "body": [
            "const props = defineProps<{",
            "  $0",
            "}>();",
        ],
        "description": "define component props",
    },
    "emit": {
        "scope": "typescript",
        "prefix": "emit",
        "body": [
            "const emit = defineEmits<{",
            "  (event: '$0'): void;",
            "}>();",
        ],
        "description": "define component emits",
    },
    "slot": {
        "scope": "html",
        "prefix": "slot",
        "body": [
            "<template #$1>",
            "  $0",
            "</template>",
        ],
        "description": "named slot",
    },
    "computed": {
        "scope": "typescript",
        "prefix": "comp",
        "body": "const $1 = computed(() => {$0})",
        "description": "computed",
    },
    "ref": {
        "scope": "typescript",
        "prefix": "refv",
        "body": "const $1 = ref($0)",
        "description": "ref",
    },
    "template": {
        "scope": "vue",
        "prefix": "tem",
        "body": [
            "<template>",
            "  $1",
            "</template>",
            "<script setup lang=\"ts\">",
            "  $0",
            "</script>",
        ],
        "description": "vue template for script setup"
    },
    "computedSetter": {
        "scope": "typescript",
        "prefix": "comps",
        "body": [
            "const $1 = computed({",
            "  get() {",
            "    $0",
            "  },",
            "  set(v) {",
            "  }",
            "})",
        ],
    }
    // Place your snippets for vue here. Each snippet is defined under a snippet name and has a prefix, body and 
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and \${1:label}, \${2:another} for placeholders. Placeholders with the 
    // same ids are connected.
    // Example:
    // "template": {
    //     "scope": "vue",
    //     "prefix": "template",
    //     "body": [
    //         "<template>",
    //         "  $1",
    //         "</template>"
    //     ],
    //     "description": "Create <template> block"
    // },
    // "script": {
    //     "scope": "vue",
    //     "prefix": "script",
    //     "body": [
    //         "<script lang=\"ts\">",
    //         "import { defineComponent } from 'vue';",
    //         "",
    //         "export default defineComponent({",
    //         "  $2",
    //         "});",
    //         "</script>"
    //     ],
    //     "description": "Create <script> block"
    // },
    // "script setup": {
    //     "scope": "vue",
    //     "prefix": "script setup",
    //     "body": [
    //         "<script lang=\"ts\" setup>",
    //         "defineProps<{ $1 }>();",
    //         "</script>"
    //     ],
    //     "description": "Create <script setup> + <script> blocks"
    // },
    // "style": {
    //     "scope": "vue",
    //     "prefix": "style",
    //     "body": [
    //         "<style lang=\"scss\" scoped>",
    //         "$1",
    //         "</style>"
    //     ],
    //     "description": "Create <style> block"
    // },
    // "v-for": {
    //     "scope": "html",
    //     "prefix": "v-for",
    //     "body": [
    //         "<template v-for=\"$1 in $2\">",
    //         "  $3",
    //         "</template>"
    //     ],
    //     "description": "Create html tag with v-for"
    // },
    // "v-if": {
    //     "scope": "html",
    //     "prefix": "v-if",
    //     "body": [
    //         "<template v-if=\"$1\">",
    //         "  $2",
    //         "</template>"
    //     ],
    //     "description": "Create html tag with v-if"
    // },
    // "v-else-if": {
    //     "scope": "html",
    //     "prefix": "v-else-if",
    //     "body": [
    //         "<template v-else-if=\"$1\">",
    //         "  $2",
    //         "</template>"
    //     ],
    //     "description": "Create html tag with v-else-if"
    // },
    // "v-else": {
    //     "scope": "html",
    //     "prefix": "v-else",
    //     "body": [
    //         "<template v-else>",
    //         "  $2",
    //         "</template>"
    //     ],
    //     "description": "Create html tag with v-else"
    // }
}